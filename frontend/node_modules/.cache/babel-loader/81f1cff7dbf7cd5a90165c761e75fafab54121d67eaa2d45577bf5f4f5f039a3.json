{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport apptService from './authService';\nconst initialState = {\n  isAuthenticated: false,\n  isPending: false,\n  isRejected: false,\n  username: '',\n  room_number: '',\n  message: ''\n};\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n  } catch (error) {\n    const message = error.response.data['error'];\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async (user, thunkAPI) => {\n  try {\n    return await authService.logout(user);\n  } catch (error) {\n    console.log(error);\n    const message = error.response && error.response.data && error.response.data.message && error.response.data.error || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const isAuth = createAsyncThunk('auth/check', async (user, thunkAPI) => {\n  try {\n    return await authService.isAuth();\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(register.fulfilled, (state, action) => {\n      state.isAuthenticated = true;\n      state.isPending = false;\n      state.isRejected = false;\n      state.username = action.payload['username'];\n      if (action.payload['room']) {\n        state.room_number = action.payload['room']['number'];\n      }\n      state.message = `Welcome, ${state.username}`;\n    }).addCase(register.pending, (state, action) => {\n      state.isAuthenticated = false;\n      state.isPending = true;\n      state.isRejected = false;\n      state.username = '';\n      state.room_number = '';\n      state.message = '';\n    }).addCase(register.rejected, (state, action) => {\n      state.isAuthenticated = false;\n      state.isPending = false;\n      state.isRejected = true;\n      state.username = '';\n      state.room_number = '';\n      state.message = action.payload;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isAuthenticated = true;\n      state.isPending = false;\n      state.isRejected = false;\n      state.username = action.payload['username'];\n      if (action.payload['room']) {\n        state.room_number = action.payload['room']['number'];\n      }\n      state.message = `Welcome, ${state.username}`;\n    }).addCase(login.pending, (state, action) => {\n      state.isAuthenticated = false;\n      state.isPending = true;\n      state.isRejected = false;\n    }).addCase(login.rejected, (state, action) => {\n      state.isAuthenticated = false;\n      state.isPending = false;\n      state.isRejected = true;\n      state.username = '';\n      state.room_number = '';\n      state.message = action.payload;\n    }).addCase(logout.fulfilled, (state, action) => {\n      state.isAuthenticated = false;\n      state.isPending = false;\n      state.isRejected = false;\n      state.username = '';\n      state.room_number = '';\n      state.message = 'Logged out';\n    }).addCase(logout.pending, (state, action) => {\n      state.isPending = true;\n    }).addCase(logout.rejected, (state, action) => {\n      state.isPending = false;\n      state.message = action.payload;\n    }).addCase(isAuth.fulfilled, (state, action) => {\n      state.isAuthenticated = true;\n      state.isPending = false;\n      state.isRejected = false;\n      state.username = action.payload['username'];\n      if (action.payload['room']) {\n        state.room_number = action.payload['room']['number'];\n      }\n      state.message = '';\n    }).addCase(isAuth.pending, (state, action) => {\n      state.isAuthenticated = false;\n      state.isPending = true;\n      state.isRejected = false;\n      state.username = '';\n      state.room_number = '';\n      state.message = '';\n    }).addCase(isAuth.rejected, (state, action) => {\n      state.isAuthenticated = false;\n      state.isPending = false;\n      state.isRejected = true;\n      state.username = '';\n      state.room_number = '';\n      state.message = '';\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","apptService","initialState","isAuthenticated","isPending","isRejected","username","room_number","message","register","user","thunkAPI","authService","error","response","data","toString","rejectWithValue","login","logout","console","log","isAuth","authSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","pending","rejected","reducer"],"sources":["/Users/jrrrrr/CS50W/final/dorm/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport apptService from './authService'\n\nconst initialState = {\n    isAuthenticated: false,\n    isPending: false,\n    isRejected: false,\n    username: '',\n    room_number: '',\n    message: ''\n}\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n    try {\n        return await authService.register(user)\n    } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n    try {\n        return await authService.login(user)\n    } catch (error) {\n        const message = error.response.data['error']\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const logout = createAsyncThunk('auth/logout', async (user, thunkAPI) => {\n    try {\n        return await authService.logout(user)\n    } catch (error) {\n        console.log(error)\n        const message = (error.response && error.response.data && error.response.data.message && error.response.data.error) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const isAuth = createAsyncThunk('auth/check', async (user, thunkAPI) => {\n    try {\n        return await authService.isAuth()\n    } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(register.fulfilled, (state, action) => {\n                state.isAuthenticated = true\n                state.isPending = false\n                state.isRejected = false\n                state.username = action.payload['username']\n                if (action.payload['room']) {\n                    state.room_number = action.payload['room']['number']\n                }\n                state.message = `Welcome, ${state.username}`\n            })\n            .addCase(register.pending, (state, action) => {\n                state.isAuthenticated = false\n                state.isPending = true\n                state.isRejected = false\n                state.username = ''\n                state.room_number = ''\n                state.message = ''\n            })\n            .addCase(register.rejected, (state, action) => {\n                state.isAuthenticated = false\n                state.isPending = false\n                state.isRejected = true\n                state.username = ''\n                state.room_number = ''\n                state.message = action.payload\n            })\n            .addCase(login.fulfilled, (state, action) => {\n                state.isAuthenticated = true\n                state.isPending = false\n                state.isRejected = false\n                state.username = action.payload['username']\n                if (action.payload['room']) {\n                    state.room_number = action.payload['room']['number']\n                }\n                state.message = `Welcome, ${state.username}`\n            })\n            .addCase(login.pending, (state, action) => {\n                state.isAuthenticated = false\n                state.isPending = true\n                state.isRejected = false\n            })\n            .addCase(login.rejected, (state, action) => {\n                state.isAuthenticated = false\n                state.isPending = false\n                state.isRejected = true\n                state.username = ''\n                state.room_number = ''\n                state.message = action.payload\n            })\n            .addCase(logout.fulfilled, (state, action) => {\n                state.isAuthenticated = false\n                state.isPending = false\n                state.isRejected = false\n                state.username = ''\n                state.room_number = ''\n                state.message = 'Logged out'\n            })\n            .addCase(logout.pending, (state, action) => {\n                state.isPending = true\n            })\n            .addCase(logout.rejected, (state, action) => {\n                state.isPending = false\n                state.message = action.payload\n            })\n            .addCase(isAuth.fulfilled, (state, action) => {\n                state.isAuthenticated = true\n                state.isPending = false\n                state.isRejected = false\n                state.username = action.payload['username']\n                if (action.payload['room']) {\n                    state.room_number = action.payload['room']['number']\n                }\n                state.message = ''\n            })\n            .addCase(isAuth.pending, (state, action) => {\n                state.isAuthenticated = false\n                state.isPending = true\n                state.isRejected = false\n                state.username = ''\n                state.room_number = ''\n                state.message = ''\n            })\n            .addCase(isAuth.rejected, (state, action) => {\n                state.isAuthenticated = false\n                state.isPending = false\n                state.isRejected = true\n                state.username = ''\n                state.room_number = ''\n                state.message = ''\n            })\n    }\n})\n\nexport default authSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}