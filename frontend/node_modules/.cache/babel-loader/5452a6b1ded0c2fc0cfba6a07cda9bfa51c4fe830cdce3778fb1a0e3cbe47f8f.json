{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport deviceService from \"./deviceService\";\nconst initialState = {\n  devices: null,\n  isError: false,\n  isLoading: true,\n  message: ''\n};\nexport const getMy = createAsyncThunk('device/get', async (user, thunkAPI) => {\n  try {\n    return await deviceService.getMy(user);\n  } catch (error) {\n    const message = error.response.data['error'];\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const register = createAsyncThunk('device/register', async (user, thunkAPI) => {\n  try {\n    return await deviceService.register(user);\n  } catch (error) {\n    const message = error.response.data['error'];\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const remove = createAsyncThunk('device/remove', async (user, thunkAPI) => {\n  try {\n    return await deviceService.remove(user);\n  } catch (error) {\n    const message = error.response.data['error'];\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const deviceSlice = createSlice({\n  name: \"device\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getMy.fulfilled, (state, action) => {\n      console.log(action.payload);\n    }).addCase(getMy.rejected, (state, action) => {\n      console.log(action.payload);\n    }).addCase(register.fulfilled, (state, action) => {\n      console.log(action.payload);\n    }).addCase(register.rejected, (state, action) => {\n      console.log(action.payload);\n    }).addCase(remove.fulfilled, (state, action) => {\n      console.log(action.payload);\n    }).addCase(remove.rejected, (state, action) => {\n      console.log(action.payload);\n    });\n  }\n});\nexport default deviceSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","deviceService","initialState","devices","isError","isLoading","message","getMy","user","thunkAPI","error","response","data","rejectWithValue","register","remove","deviceSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","console","log","payload","rejected","reducer"],"sources":["/Users/jrrrrr/CS50W/final/dorm/frontend/src/features/device/deviceSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\nimport deviceService from \"./deviceService\"\n\nconst initialState = {\n    devices: null,\n    isError: false,\n    isLoading: true,\n    message: ''\n}\n\nexport const getMy = createAsyncThunk('device/get', async (user, thunkAPI) => {\n    try {\n        return await deviceService.getMy(user)\n    } catch (error) {\n        const message = error.response.data['error']\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const register = createAsyncThunk('device/register', async (user, thunkAPI) => {\n    try {\n        return await deviceService.register(user)\n    } catch (error) {\n        const message = error.response.data['error']\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const remove = createAsyncThunk('device/remove', async (user, thunkAPI) => {\n    try {\n        return await deviceService.remove(user)\n    } catch (error) {\n        const message = error.response.data['error']\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\n\n\nexport const deviceSlice = createSlice({\n    name: \"device\",\n    initialState,\n    reducers: {\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(getMy.fulfilled, (state, action) => {\n                console.log(action.payload)\n            })\n            .addCase(getMy.rejected, (state, action) => {\n                console.log(action.payload)\n            })\n            .addCase(register.fulfilled, (state, action) => {\n                console.log(action.payload)\n            })\n            .addCase(register.rejected, (state, action) => {\n                console.log(action.payload)\n            })\n            .addCase(remove.fulfilled, (state, action) => {\n                console.log(action.payload)\n            })\n            .addCase(remove.rejected, (state, action) => {\n                console.log(action.payload)\n            })\n    }\n})\n\n\nexport default deviceSlice.reducer\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}