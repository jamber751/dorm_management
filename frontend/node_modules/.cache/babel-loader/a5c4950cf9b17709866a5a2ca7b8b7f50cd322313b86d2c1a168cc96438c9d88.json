{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\nconst AUTH_URL = 'auth/';\nconst getCSRF = async () => {\n  await axios.get(AUTH_URL + \"csrf\");\n  const config = {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    }\n  };\n  return config;\n};\nasync function register(userData) {\n  const response = await axios.post(AUTH_URL + 'register', userData);\n  return response.data;\n}\nasync function login(userData) {\n  const response = await axios.post(AUTH_URL + 'login', userData);\n  return response.data;\n}\nasync function logout(userData) {\n  const config = await getCSRF();\n  const response = await axios.post(AUTH_URL + 'logout', userData, config);\n  return response.data;\n}\nasync function isAuth() {\n  const response = await axios.get(AUTH_URL + 'check');\n  return response.data;\n}\nconst authService = {\n  register,\n  login,\n  logout,\n  isAuth\n};\nexport default authService;","map":{"version":3,"names":["axios","Cookies","AUTH_URL","getCSRF","get","config","headers","register","userData","response","post","data","login","logout","isAuth","authService"],"sources":["/Users/jrrrrr/CS50W/final/dorm/frontend/src/features/auth/authService.js"],"sourcesContent":["import axios from 'axios'\nimport Cookies from 'js-cookie'\nconst AUTH_URL = 'auth/'\n\nconst getCSRF = async() => {\n    await axios.get(AUTH_URL + \"csrf\")\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n    return config\n}\n\nasync function register(userData) {\n    const response = await axios.post(AUTH_URL + 'register', userData)\n    return response.data\n}\n\nasync function login(userData) {\n    const response = await axios.post(AUTH_URL + 'login', userData)\n    return response.data\n}\n\nasync function logout(userData) {\n    const config = await getCSRF()\n    const response = await axios.post(AUTH_URL + 'logout', userData, config)\n    return response.data\n}\n\nasync function isAuth() {\n    const response = await axios.get(AUTH_URL + 'check')\n    return response.data\n}\n\nconst authService = {\n    register,\n    login,\n    logout,\n    isAuth\n}\n\nexport default authService"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,MAAMC,QAAQ,GAAG,OAAO;AAExB,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAW;EACvB,MAAMH,KAAK,CAACI,GAAG,CAACF,QAAQ,GAAG,MAAM,CAAC;EAClC,MAAMG,MAAM,GAAG;IACXC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE,kBAAkB;MAClC,aAAa,EAAEL,OAAO,CAACG,GAAG,CAAC,WAAW;IAC1C;EACJ,CAAC;EACD,OAAOC,MAAM;AACjB,CAAC;AAED,eAAeE,QAAQA,CAACC,QAAQ,EAAE;EAC9B,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACR,QAAQ,GAAG,UAAU,EAAEM,QAAQ,CAAC;EAClE,OAAOC,QAAQ,CAACE,IAAI;AACxB;AAEA,eAAeC,KAAKA,CAACJ,QAAQ,EAAE;EAC3B,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACR,QAAQ,GAAG,OAAO,EAAEM,QAAQ,CAAC;EAC/D,OAAOC,QAAQ,CAACE,IAAI;AACxB;AAEA,eAAeE,MAAMA,CAACL,QAAQ,EAAE;EAC5B,MAAMH,MAAM,GAAG,MAAMF,OAAO,EAAE;EAC9B,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACR,QAAQ,GAAG,QAAQ,EAAEM,QAAQ,EAAEH,MAAM,CAAC;EACxE,OAAOI,QAAQ,CAACE,IAAI;AACxB;AAEA,eAAeG,MAAMA,CAAA,EAAG;EACpB,MAAML,QAAQ,GAAG,MAAMT,KAAK,CAACI,GAAG,CAACF,QAAQ,GAAG,OAAO,CAAC;EACpD,OAAOO,QAAQ,CAACE,IAAI;AACxB;AAEA,MAAMI,WAAW,GAAG;EAChBR,QAAQ;EACRK,KAAK;EACLC,MAAM;EACNC;AACJ,CAAC;AAED,eAAeC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}