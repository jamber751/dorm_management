{"ast":null,"code":"import { createSlice, createAsyncThunk, isAsyncThunkAction } from \"@reduxjs/toolkit\";\nimport apptService from './apptService';\nconst initialState = {\n  appointments: null,\n  message: ''\n};\nexport const getAppts = createAsyncThunk('appt/get', async (user, thunkAPI) => {\n  try {\n    return await apptService.getAppts(user);\n  } catch (error) {\n    const message = error.response.data['error'];\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const bookAppt = createAsyncThunk('appt/book', async (user, thunkAPI) => {\n  try {\n    return await apptService.bookAppt(user);\n  } catch (error) {\n    const message = error.response.data['error'];\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const myAppt = createAsyncThunk('appt/my', async (user, thunkAPI) => {\n  try {\n    return await apptService.myAppts(user);\n  } catch (error) {\n    const message = error.response.data['error'];\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const apptSlice = createSlice({\n  name: \"appt\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getAppts.fulfilled, (state, action) => {\n      state.appointments = action.payload;\n      state.message = '';\n    }).addCase(getAppts.rejected, (state, action) => {\n      state.message = action.payload;\n    }).addCase(bookAppt.fulfilled, (state, action) => {\n      state.message = 'booked';\n    }).addCase(bookAppt.rejected, (state, action) => {\n      state.message = action.payload;\n    }).addCase(myAppt.fulfilled, (state, action) => {\n      state.appointments = action.payload;\n      state.message = '';\n    });\n  }\n});\nexport default apptSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","isAsyncThunkAction","apptService","initialState","appointments","message","getAppts","user","thunkAPI","error","response","data","rejectWithValue","bookAppt","myAppt","myAppts","apptSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","rejected","reducer"],"sources":["/Users/jrrrrr/CS50W/final/dorm/frontend/src/features/appts/apptSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, isAsyncThunkAction } from \"@reduxjs/toolkit\"\nimport apptService from './apptService'\n\nconst initialState = {\n    appointments: null,\n    message: ''\n}\n\nexport const getAppts = createAsyncThunk('appt/get', async (user, thunkAPI) => {\n    try {\n        return await apptService.getAppts(user)\n    } catch (error) {\n        const message = error.response.data['error']\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const bookAppt = createAsyncThunk('appt/book', async (user, thunkAPI) => {\n    try {\n        return await apptService.bookAppt(user)\n    } catch (error) {\n        const message = error.response.data['error']\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const myAppt = createAsyncThunk('appt/my', async (user, thunkAPI) => {\n    try {\n        return await apptService.myAppts(user)\n    } catch (error) {\n        const message = error.response.data['error']\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const apptSlice = createSlice({\n    name: \"appt\",\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(getAppts.fulfilled, (state, action) => {\n                state.appointments = action.payload\n                state.message = ''\n            })\n            .addCase(getAppts.rejected, (state, action) => {\n                state.message = action.payload\n            })\n            .addCase(bookAppt.fulfilled, (state, action) => {\n                state.message = 'booked'\n            })\n            .addCase(bookAppt.rejected, (state, action) => {\n                state.message = action.payload\n            })\n            .addCase(myAppt.fulfilled, (state, action) => {\n                state.appointments = action.payload\n                state.message = ''\n            })\n    }\n\n\n})\n\nexport default apptSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,kBAAkB,QAAQ,kBAAkB;AACpF,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,YAAY,GAAG;EACjBC,YAAY,EAAE,IAAI;EAClBC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGN,gBAAgB,CAAC,UAAU,EAAE,OAAOO,IAAI,EAAEC,QAAQ,KAAK;EAC3E,IAAI;IACA,OAAO,MAAMN,WAAW,CAACI,QAAQ,CAACC,IAAI,CAAC;EAC3C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMJ,OAAO,GAAGI,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC,OAAO,CAAC;IAC5C,OAAOH,QAAQ,CAACI,eAAe,CAACP,OAAO,CAAC;EAC5C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMQ,QAAQ,GAAGb,gBAAgB,CAAC,WAAW,EAAE,OAAOO,IAAI,EAAEC,QAAQ,KAAK;EAC5E,IAAI;IACA,OAAO,MAAMN,WAAW,CAACW,QAAQ,CAACN,IAAI,CAAC;EAC3C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMJ,OAAO,GAAGI,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC,OAAO,CAAC;IAC5C,OAAOH,QAAQ,CAACI,eAAe,CAACP,OAAO,CAAC;EAC5C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMS,MAAM,GAAGd,gBAAgB,CAAC,SAAS,EAAE,OAAOO,IAAI,EAAEC,QAAQ,KAAK;EACxE,IAAI;IACA,OAAO,MAAMN,WAAW,CAACa,OAAO,CAACR,IAAI,CAAC;EAC1C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMJ,OAAO,GAAGI,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC,OAAO,CAAC;IAC5C,OAAOH,QAAQ,CAACI,eAAe,CAACP,OAAO,CAAC;EAC5C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMW,SAAS,GAAGjB,WAAW,CAAC;EACjCkB,IAAI,EAAE,MAAM;EACZd,YAAY;EACZe,QAAQ,EAAE,CACV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACf,QAAQ,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAACnB,YAAY,GAAGoB,MAAM,CAACC,OAAO;MACnCF,KAAK,CAAClB,OAAO,GAAG,EAAE;IACtB,CAAC,CAAC,CACDgB,OAAO,CAACf,QAAQ,CAACoB,QAAQ,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAAClB,OAAO,GAAGmB,MAAM,CAACC,OAAO;IAClC,CAAC,CAAC,CACDJ,OAAO,CAACR,QAAQ,CAACS,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5CD,KAAK,CAAClB,OAAO,GAAG,QAAQ;IAC5B,CAAC,CAAC,CACDgB,OAAO,CAACR,QAAQ,CAACa,QAAQ,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAAClB,OAAO,GAAGmB,MAAM,CAACC,OAAO;IAClC,CAAC,CAAC,CACDJ,OAAO,CAACP,MAAM,CAACQ,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1CD,KAAK,CAACnB,YAAY,GAAGoB,MAAM,CAACC,OAAO;MACnCF,KAAK,CAAClB,OAAO,GAAG,EAAE;IACtB,CAAC,CAAC;EACV;AAGJ,CAAC,CAAC;AAEF,eAAeW,SAAS,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}